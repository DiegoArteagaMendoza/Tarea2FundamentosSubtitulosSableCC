/* This file was generated by SableCC (http://www.sablecc.org/). */

package srt.node;

import srt.analysis.*;

@SuppressWarnings("nls")
public final class ATime extends PTime
{
    private PHours _h1_;
    private TTwopoint _t1_;
    private PMinutes _m1_;
    private TTwopoint _t2_;
    private PSeconds _s1_;
    private TComma _c1_;
    private PMillisecons _x1_;
    private TArrow _arrow_;
    private PHours _h2_;
    private TTwopoint _t3_;
    private PMinutes _m2_;
    private TTwopoint _t4_;
    private PSeconds _s2_;
    private TComma _c2_;
    private PMillisecons _x2_;

    public ATime()
    {
        // Constructor
    }

    public ATime(
        @SuppressWarnings("hiding") PHours _h1_,
        @SuppressWarnings("hiding") TTwopoint _t1_,
        @SuppressWarnings("hiding") PMinutes _m1_,
        @SuppressWarnings("hiding") TTwopoint _t2_,
        @SuppressWarnings("hiding") PSeconds _s1_,
        @SuppressWarnings("hiding") TComma _c1_,
        @SuppressWarnings("hiding") PMillisecons _x1_,
        @SuppressWarnings("hiding") TArrow _arrow_,
        @SuppressWarnings("hiding") PHours _h2_,
        @SuppressWarnings("hiding") TTwopoint _t3_,
        @SuppressWarnings("hiding") PMinutes _m2_,
        @SuppressWarnings("hiding") TTwopoint _t4_,
        @SuppressWarnings("hiding") PSeconds _s2_,
        @SuppressWarnings("hiding") TComma _c2_,
        @SuppressWarnings("hiding") PMillisecons _x2_)
    {
        // Constructor
        setH1(_h1_);

        setT1(_t1_);

        setM1(_m1_);

        setT2(_t2_);

        setS1(_s1_);

        setC1(_c1_);

        setX1(_x1_);

        setArrow(_arrow_);

        setH2(_h2_);

        setT3(_t3_);

        setM2(_m2_);

        setT4(_t4_);

        setS2(_s2_);

        setC2(_c2_);

        setX2(_x2_);

    }

    @Override
    public Object clone()
    {
        return new ATime(
            cloneNode(this._h1_),
            cloneNode(this._t1_),
            cloneNode(this._m1_),
            cloneNode(this._t2_),
            cloneNode(this._s1_),
            cloneNode(this._c1_),
            cloneNode(this._x1_),
            cloneNode(this._arrow_),
            cloneNode(this._h2_),
            cloneNode(this._t3_),
            cloneNode(this._m2_),
            cloneNode(this._t4_),
            cloneNode(this._s2_),
            cloneNode(this._c2_),
            cloneNode(this._x2_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseATime(this);
    }

    public PHours getH1()
    {
        return this._h1_;
    }

    public void setH1(PHours node)
    {
        if(this._h1_ != null)
        {
            this._h1_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._h1_ = node;
    }

    public TTwopoint getT1()
    {
        return this._t1_;
    }

    public void setT1(TTwopoint node)
    {
        if(this._t1_ != null)
        {
            this._t1_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._t1_ = node;
    }

    public PMinutes getM1()
    {
        return this._m1_;
    }

    public void setM1(PMinutes node)
    {
        if(this._m1_ != null)
        {
            this._m1_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._m1_ = node;
    }

    public TTwopoint getT2()
    {
        return this._t2_;
    }

    public void setT2(TTwopoint node)
    {
        if(this._t2_ != null)
        {
            this._t2_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._t2_ = node;
    }

    public PSeconds getS1()
    {
        return this._s1_;
    }

    public void setS1(PSeconds node)
    {
        if(this._s1_ != null)
        {
            this._s1_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._s1_ = node;
    }

    public TComma getC1()
    {
        return this._c1_;
    }

    public void setC1(TComma node)
    {
        if(this._c1_ != null)
        {
            this._c1_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._c1_ = node;
    }

    public PMillisecons getX1()
    {
        return this._x1_;
    }

    public void setX1(PMillisecons node)
    {
        if(this._x1_ != null)
        {
            this._x1_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._x1_ = node;
    }

    public TArrow getArrow()
    {
        return this._arrow_;
    }

    public void setArrow(TArrow node)
    {
        if(this._arrow_ != null)
        {
            this._arrow_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._arrow_ = node;
    }

    public PHours getH2()
    {
        return this._h2_;
    }

    public void setH2(PHours node)
    {
        if(this._h2_ != null)
        {
            this._h2_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._h2_ = node;
    }

    public TTwopoint getT3()
    {
        return this._t3_;
    }

    public void setT3(TTwopoint node)
    {
        if(this._t3_ != null)
        {
            this._t3_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._t3_ = node;
    }

    public PMinutes getM2()
    {
        return this._m2_;
    }

    public void setM2(PMinutes node)
    {
        if(this._m2_ != null)
        {
            this._m2_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._m2_ = node;
    }

    public TTwopoint getT4()
    {
        return this._t4_;
    }

    public void setT4(TTwopoint node)
    {
        if(this._t4_ != null)
        {
            this._t4_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._t4_ = node;
    }

    public PSeconds getS2()
    {
        return this._s2_;
    }

    public void setS2(PSeconds node)
    {
        if(this._s2_ != null)
        {
            this._s2_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._s2_ = node;
    }

    public TComma getC2()
    {
        return this._c2_;
    }

    public void setC2(TComma node)
    {
        if(this._c2_ != null)
        {
            this._c2_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._c2_ = node;
    }

    public PMillisecons getX2()
    {
        return this._x2_;
    }

    public void setX2(PMillisecons node)
    {
        if(this._x2_ != null)
        {
            this._x2_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._x2_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._h1_)
            + toString(this._t1_)
            + toString(this._m1_)
            + toString(this._t2_)
            + toString(this._s1_)
            + toString(this._c1_)
            + toString(this._x1_)
            + toString(this._arrow_)
            + toString(this._h2_)
            + toString(this._t3_)
            + toString(this._m2_)
            + toString(this._t4_)
            + toString(this._s2_)
            + toString(this._c2_)
            + toString(this._x2_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._h1_ == child)
        {
            this._h1_ = null;
            return;
        }

        if(this._t1_ == child)
        {
            this._t1_ = null;
            return;
        }

        if(this._m1_ == child)
        {
            this._m1_ = null;
            return;
        }

        if(this._t2_ == child)
        {
            this._t2_ = null;
            return;
        }

        if(this._s1_ == child)
        {
            this._s1_ = null;
            return;
        }

        if(this._c1_ == child)
        {
            this._c1_ = null;
            return;
        }

        if(this._x1_ == child)
        {
            this._x1_ = null;
            return;
        }

        if(this._arrow_ == child)
        {
            this._arrow_ = null;
            return;
        }

        if(this._h2_ == child)
        {
            this._h2_ = null;
            return;
        }

        if(this._t3_ == child)
        {
            this._t3_ = null;
            return;
        }

        if(this._m2_ == child)
        {
            this._m2_ = null;
            return;
        }

        if(this._t4_ == child)
        {
            this._t4_ = null;
            return;
        }

        if(this._s2_ == child)
        {
            this._s2_ = null;
            return;
        }

        if(this._c2_ == child)
        {
            this._c2_ = null;
            return;
        }

        if(this._x2_ == child)
        {
            this._x2_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._h1_ == oldChild)
        {
            setH1((PHours) newChild);
            return;
        }

        if(this._t1_ == oldChild)
        {
            setT1((TTwopoint) newChild);
            return;
        }

        if(this._m1_ == oldChild)
        {
            setM1((PMinutes) newChild);
            return;
        }

        if(this._t2_ == oldChild)
        {
            setT2((TTwopoint) newChild);
            return;
        }

        if(this._s1_ == oldChild)
        {
            setS1((PSeconds) newChild);
            return;
        }

        if(this._c1_ == oldChild)
        {
            setC1((TComma) newChild);
            return;
        }

        if(this._x1_ == oldChild)
        {
            setX1((PMillisecons) newChild);
            return;
        }

        if(this._arrow_ == oldChild)
        {
            setArrow((TArrow) newChild);
            return;
        }

        if(this._h2_ == oldChild)
        {
            setH2((PHours) newChild);
            return;
        }

        if(this._t3_ == oldChild)
        {
            setT3((TTwopoint) newChild);
            return;
        }

        if(this._m2_ == oldChild)
        {
            setM2((PMinutes) newChild);
            return;
        }

        if(this._t4_ == oldChild)
        {
            setT4((TTwopoint) newChild);
            return;
        }

        if(this._s2_ == oldChild)
        {
            setS2((PSeconds) newChild);
            return;
        }

        if(this._c2_ == oldChild)
        {
            setC2((TComma) newChild);
            return;
        }

        if(this._x2_ == oldChild)
        {
            setX2((PMillisecons) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
