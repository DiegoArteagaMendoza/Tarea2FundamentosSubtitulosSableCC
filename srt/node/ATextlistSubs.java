/* This file was generated by SableCC (http://www.sablecc.org/). */

package srt.node;

import srt.analysis.*;

@SuppressWarnings("nls")
public final class ATextlistSubs extends PSubs
{
    private PTextlist _textlist_;

    public ATextlistSubs()
    {
        // Constructor
    }

    public ATextlistSubs(
        @SuppressWarnings("hiding") PTextlist _textlist_)
    {
        // Constructor
        setTextlist(_textlist_);

    }

    @Override
    public Object clone()
    {
        return new ATextlistSubs(
            cloneNode(this._textlist_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseATextlistSubs(this);
    }

    public PTextlist getTextlist()
    {
        return this._textlist_;
    }

    public void setTextlist(PTextlist node)
    {
        if(this._textlist_ != null)
        {
            this._textlist_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._textlist_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._textlist_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._textlist_ == child)
        {
            this._textlist_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._textlist_ == oldChild)
        {
            setTextlist((PTextlist) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
